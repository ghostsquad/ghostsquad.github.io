<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ghostsquad blog</title>
    <link>https://ghostsquad.me/</link>
    <description>Recent content on ghostsquad blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 16 Nov 2019 17:49:17 -0800</lastBuildDate>
    
	<atom:link href="https://ghostsquad.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes on the Cheap - Part 1</title>
      <link>https://ghostsquad.me/posts/kubernetes-on-the-cheap-part-1/</link>
      <pubDate>Sat, 16 Nov 2019 17:49:17 -0800</pubDate>
      
      <guid>https://ghostsquad.me/posts/kubernetes-on-the-cheap-part-1/</guid>
      <description>How to run Kubernetes for less than $6 per month?
I wanted to play around with Kubernetes for personal learning, and even some personal projects. I wanted to deploy a website with a live backend, but I didn&amp;rsquo;t really want to be bound to cPanel, or terrible performance issues on shared hosting providers. This was also an opportunity for me to learn more about deploying an application end2end and managing it myself.</description>
    </item>
    
    <item>
      <title>The Little Things</title>
      <link>https://ghostsquad.me/posts/the-little-things/</link>
      <pubDate>Fri, 23 Aug 2019 18:44:31 -0700</pubDate>
      
      <guid>https://ghostsquad.me/posts/the-little-things/</guid>
      <description>One thing I&amp;rsquo;ve noticed over the years is that the little things in software development often get overlooked as &amp;ldquo;bike shedding&amp;rdquo; moments, and yet there&amp;rsquo;s significant value in establishing a standard, convention, and even automation around these overlooked things. Let&amp;rsquo;s dive right in:
Git Commits Following conventional commits standards can allow you to do things like:
 Automatically generate CHANGELOGs Automatically determine semantic version bump Communicate nature of changes to teammates, public, stakeholders Used to change build pipeline behavior at runtime to publish code automatically Enhance readability of git commit history  I&amp;rsquo;m in the SRE/DevOps/PaaS space, and I often find myself wishing I had more time to write weekly newsletters or similar communications to internal teams to increase the visibility of the new features, bugfixes, and other changes that are being delivered.</description>
    </item>
    
  </channel>
</rss>